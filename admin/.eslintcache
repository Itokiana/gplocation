[{"/home/zo/Projet/gplocation/admin/src/index.js":"1","/home/zo/Projet/gplocation/admin/src/serviceWorker.js":"2","/home/zo/Projet/gplocation/admin/src/store.js":"3","/home/zo/Projet/gplocation/admin/src/App.js":"4","/home/zo/Projet/gplocation/admin/src/middleware.js":"5","/home/zo/Projet/gplocation/admin/src/redux/rootReducer.js":"6","/home/zo/Projet/gplocation/admin/src/components/Navbar/Navbar.js":"7","/home/zo/Projet/gplocation/admin/src/pages/Category/Voitures/DetailVoiture.js":"8","/home/zo/Projet/gplocation/admin/src/pages/Login/Login.js":"9","/home/zo/Projet/gplocation/admin/src/pages/Utilisateurs/Utilisateurs.js":"10","/home/zo/Projet/gplocation/admin/src/pages/Accueil/Accueil.js":"11","/home/zo/Projet/gplocation/admin/src/components/Sidebar/Sidebar.js":"12","/home/zo/Projet/gplocation/admin/src/pages/Category/Categories.js":"13","/home/zo/Projet/gplocation/admin/src/pages/Planning/Planning.js":"14","/home/zo/Projet/gplocation/admin/src/pages/Category/Editer/Editer.js":"15","/home/zo/Projet/gplocation/admin/src/pages/Category/Voitures/Voitures.js":"16","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/ConfigurationAgence.js":"17","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/TrifDeBase.js":"18","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/Jours/Jours.js":"19","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/TarifPeronnaliser.js":"20","/home/zo/Projet/gplocation/admin/src/pages/Message/ClientMessage.js":"21","/home/zo/Projet/gplocation/admin/src/pages/Reservation/Reservation.js":"22","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/TarifList.js":"23","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionJF/AjoutJour.js":"24","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/calendrier/Indexs.js":"25","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/AddSaison.js":"26","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/GestionTemp.js":"27","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/Tarif.js":"28","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Paiment/Partiel.js":"29","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/GestionSaison.js":"30","/home/zo/Projet/gplocation/admin/src/pages/Dashbord/Dashbord.js":"31","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/AddTarif.js":"32","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionJF/GestionJF.js":"33","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionOF/GestionOF.js":"34","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionFE/GestionFE.js":"35","/home/zo/Projet/gplocation/admin/src/axios.js":"36","/home/zo/Projet/gplocation/admin/src/redux/Auth/auth.action.js":"37","/home/zo/Projet/gplocation/admin/src/components/Navbar/UserProfil.js":"38","/home/zo/Projet/gplocation/admin/src/redux/Auth/auth.reducer.js":"39","/home/zo/Projet/gplocation/admin/src/pages/Utilisateurs/AddUtilisateur.js":"40","/home/zo/Projet/gplocation/admin/src/pages/Utilisateurs/ListeUtilisateur.js":"41","/home/zo/Projet/gplocation/admin/src/pages/Category/ListeCategory.js":"42","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/calendrier/Month.js":"43","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/calendrier/Days.js":"44","/home/zo/Projet/gplocation/admin/src/pages/Category/AddCategory.js":"45","/home/zo/Projet/gplocation/admin/src/components/ErrorField/ErrorField.js":"46","/home/zo/Projet/gplocation/admin/src/pages/Dashbord/ChiffreAffaire.js":"47","/home/zo/Projet/gplocation/admin/src/components/InlineEdit/InlineEdit.js":"48","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/Jours/ListeJour.js":"49","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/Jours/AddJour.js":"50","/home/zo/Projet/gplocation/admin/src/pages/Category/Voitures/AddVoiture.js":"51","/home/zo/Projet/gplocation/admin/src/pages/Category/Voitures/ListeVoiture.js":"52","/home/zo/Projet/gplocation/admin/src/pages/Category/Editer/DureeLocation/DureeLocation.js":"53","/home/zo/Projet/gplocation/admin/src/pages/Category/Editer/TarifDeBase/TarifDeBase.js":"54","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/UnPrix.js":"55","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionJF/DeuxJourFerier.js":"56","/home/zo/Projet/gplocation/admin/src/history.js":"57","/home/zo/Projet/gplocation/admin/src/pages/Category/Editer/TarifDeBase/UnTarifDeBase.js":"58"},{"size":619,"mtime":1610519638883,"results":"59","hashOfConfig":"60"},{"size":5086,"mtime":1610519638887,"results":"61","hashOfConfig":"60"},{"size":287,"mtime":1610519638887,"results":"62","hashOfConfig":"60"},{"size":4895,"mtime":1612256769948,"results":"63","hashOfConfig":"60"},{"size":398,"mtime":1610519638883,"results":"64","hashOfConfig":"60"},{"size":128,"mtime":1610519638887,"results":"65","hashOfConfig":"60"},{"size":843,"mtime":1610519962256,"results":"66","hashOfConfig":"60"},{"size":4401,"mtime":1613630516668,"results":"67","hashOfConfig":"60"},{"size":3375,"mtime":1610519962268,"results":"68","hashOfConfig":"60"},{"size":1356,"mtime":1610519962272,"results":"69","hashOfConfig":"60"},{"size":21739,"mtime":1612256769948,"results":"70","hashOfConfig":"60"},{"size":2123,"mtime":1614085139862,"results":"71","hashOfConfig":"60"},{"size":2741,"mtime":1611841017866,"results":"72","hashOfConfig":"60"},{"size":9343,"mtime":1614087323293,"results":"73","hashOfConfig":"60"},{"size":4773,"mtime":1612256769948,"results":"74","hashOfConfig":"60"},{"size":3042,"mtime":1613568058214,"results":"75","hashOfConfig":"60"},{"size":4878,"mtime":1610519962260,"results":"76","hashOfConfig":"60"},{"size":1498,"mtime":1610519962268,"results":"77","hashOfConfig":"60"},{"size":1454,"mtime":1610519962264,"results":"78","hashOfConfig":"60"},{"size":776,"mtime":1610519962268,"results":"79","hashOfConfig":"60"},{"size":3302,"mtime":1610519962268,"results":"80","hashOfConfig":"60"},{"size":4655,"mtime":1610519962268,"results":"81","hashOfConfig":"60"},{"size":1027,"mtime":1610519962268,"results":"82","hashOfConfig":"60"},{"size":5300,"mtime":1610519962260,"results":"83","hashOfConfig":"60"},{"size":2148,"mtime":1611841017882,"results":"84","hashOfConfig":"60"},{"size":8030,"mtime":1612159942073,"results":"85","hashOfConfig":"60"},{"size":860,"mtime":1611841017866,"results":"86","hashOfConfig":"60"},{"size":8804,"mtime":1611316715178,"results":"87","hashOfConfig":"60"},{"size":6176,"mtime":1585765878464,"results":"88","hashOfConfig":"60"},{"size":5566,"mtime":1610611778702,"results":"89","hashOfConfig":"60"},{"size":23432,"mtime":1611316715182,"results":"90","hashOfConfig":"60"},{"size":6636,"mtime":1614084996130,"results":"91","hashOfConfig":"60"},{"size":6751,"mtime":1610526529785,"results":"92","hashOfConfig":"60"},{"size":9158,"mtime":1611316715178,"results":"93","hashOfConfig":"60"},{"size":6791,"mtime":1611316715178,"results":"94","hashOfConfig":"60"},{"size":1166,"mtime":1613473098459,"results":"95","hashOfConfig":"60"},{"size":2538,"mtime":1610519638887,"results":"96","hashOfConfig":"60"},{"size":1331,"mtime":1610519638883,"results":"97","hashOfConfig":"60"},{"size":1471,"mtime":1610519638887,"results":"98","hashOfConfig":"60"},{"size":3427,"mtime":1611047701090,"results":"99","hashOfConfig":"60"},{"size":1992,"mtime":1610519962268,"results":"100","hashOfConfig":"60"},{"size":6931,"mtime":1614073628168,"results":"101","hashOfConfig":"60"},{"size":7604,"mtime":1612256769948,"results":"102","hashOfConfig":"60"},{"size":2411,"mtime":1611841017866,"results":"103","hashOfConfig":"60"},{"size":3537,"mtime":1613567035985,"results":"104","hashOfConfig":"60"},{"size":380,"mtime":1610519638883,"results":"105","hashOfConfig":"60"},{"size":6660,"mtime":1611841017882,"results":"106","hashOfConfig":"60"},{"size":3923,"mtime":1610519962256,"results":"107","hashOfConfig":"60"},{"size":1723,"mtime":1610519962268,"results":"108","hashOfConfig":"60"},{"size":2740,"mtime":1610519962264,"results":"109","hashOfConfig":"60"},{"size":13981,"mtime":1613635988795,"results":"110","hashOfConfig":"60"},{"size":3550,"mtime":1613645390566,"results":"111","hashOfConfig":"60"},{"size":5665,"mtime":1612187372514,"results":"112","hashOfConfig":"60"},{"size":5157,"mtime":1612256769948,"results":"113","hashOfConfig":"60"},{"size":2433,"mtime":1610519962268,"results":"114","hashOfConfig":"60"},{"size":2108,"mtime":1610519962260,"results":"115","hashOfConfig":"60"},{"size":114,"mtime":1610519638883,"results":"116","hashOfConfig":"60"},{"size":2341,"mtime":1610519962260,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1l42fqp",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"120"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/home/zo/Projet/gplocation/admin/src/index.js",[],["255","256"],"/home/zo/Projet/gplocation/admin/src/serviceWorker.js",[],"/home/zo/Projet/gplocation/admin/src/store.js",[],"/home/zo/Projet/gplocation/admin/src/App.js",[],"/home/zo/Projet/gplocation/admin/src/middleware.js",[],"/home/zo/Projet/gplocation/admin/src/redux/rootReducer.js",[],"/home/zo/Projet/gplocation/admin/src/components/Navbar/Navbar.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/Voitures/DetailVoiture.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Login/Login.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Utilisateurs/Utilisateurs.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Accueil/Accueil.js",[],"/home/zo/Projet/gplocation/admin/src/components/Sidebar/Sidebar.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/Categories.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Planning/Planning.js",["257","258"],"import React from 'react'\nimport axios from '../../axios'\nimport './Planning.css'\nimport { ScheduleComponent, getWeekNumber, HeaderRowDirective, HeaderRowsDirective, ResourcesDirective, ResourceDirective, TimelineMonth, Inject, ViewsDirective, ViewDirective, Month } from '@syncfusion/ej2-react-schedule';\nimport { Internationalization } from '@syncfusion/ej2-base';\n\nclass Planning extends React.Component{\n    // constructor() {\n    //     super(...arguments)\n        // this.localData = [\n        //     {\n        //         Id:1,\n        //         Subject: \"Marco\",\n        //         dale:\"sur\",\n        //         StartTime: new Date(2021, 0, 2, 6, 0),\n        //         EndTime: new Date(2021, 0, 2, 9, 0),\n        //         OwnerId:3\n                \n        //     },\n        //     {\n        //         Id:2,\n        //         Subject: \"Donald\",\n        //         StartTime: new Date(2021, 0, 5, 7, 0),\n        //         EndTime: new Date(2021, 0, 5, 18, 0),\n        //         OwnerId:2\n                \n        //     },\n        //     {\n        //         Id:3,\n        //         Subject: \"Don\",\n        //         StartTime: new Date(2021, 0, 5, 7, 0),\n        //         EndTime: new Date(2021, 0, 9, 8, 0),\n        //         OwnerId:1\n        //     },\n        // ]\n        // this.ownerData = [\n        //     { OwnerText: 'Nancy', Id: 1, OwnerColor: '#ffaa00' },\n        //     { OwnerText: 'Steven', Id: 2, OwnerColor: '#f8a398' },\n        //     { OwnerText: 'Michael', Id: 3, OwnerColor: '#7499e1' }\n        // ];\n        // this.resourceDataSource = [\n        //     { name: 'Will Smith', id: 1},\n        //     { name: 'Alice', id: 2, color: '#357cd2' },\n        //     { name: 'Robson', id: 3, color: '#7fa900'}\n        // ];\n        // this.instance = new Internationalization()\n    // }\n    instance = new Internationalization()\n    state = {\n        categories: null,\n        voiture: [],\n        reservation:[],\n        clients: [],\n        imagevoiture: null\n    }\n\n    async componentDidMount() {\n        await this.getCategories()\n        await this.getReservation()\n        await this.getVoiture()\n        await this.getClient()\n        await this.getImageVoiture()\n    }\n\n    async getImageVoiture(){\n        await axios.get(`/categorieVehicule`).then(response => {\n          if (response.status === 200) {\n            this.setState({\n              imagevoiture: response.data\n            })\n            // console.log(\"Mety\", this.state.imagevoiture[0].image.url)\n          }\n        }) \n    }\n\n    async getCategories(){\n\t\tawait axios.get(`/categories`).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcategories: response.data\n\t\t\t\t});\n\t\t\t\t//console.log(this.state.categories);\n\t\t\t}\n\t\t});\n    };\n    async getClient(){\n\t\tawait axios.get(`/clients`).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tclients: response.data\n\t\t\t\t});\n\t\t\t\t//console.log(this.state.clients);\n\t\t\t}\n\t\t});\n    };\n    async getVoiture(){\n        await axios.get(`/voitures`).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvoiture: response.data\n\t\t\t\t});\n\t\t\t\t//console.log(this.state.voiture);\n\t\t\t}\n\t\t});\n\n    }\n    async getReservation(){\n\t\tawait axios.get(`reservation/liste`).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\treservation: response.data\n\t\t\t\t});\n\t\t\t\t//console.log(this.state.reservation);\n\t\t\t}\n\t\t});\n    };\n    getYearDetails(value) {\n        return 'Year: ' + this.instance.formatDate(value.date, { skeleton: 'y' });\n    }\n    getMonthDetails(value) {\n        return 'Month: ' + this.instance.formatDate(value.date, { skeleton: 'M' });\n    }\n    getWeekDetails(value) {\n        return 'Week ' + getWeekNumber(value.date);\n        ;\n    }\n    yearTemplate(props) {\n        return (<span className=\"year\">{this.getYearDetails(props)}</span>);\n    }\n    monthTemplate(props) {\n        return (<span className=\"month\">{this.getMonthDetails(props)}</span>);\n    }\n    weekTemplate(props) {\n        return (<span className=\"week\">{this.getWeekDetails(props)}</span>);\n    }\n    data(obj) {\n\n        const filtreVoiture =  this.state.voiture.filter(person => person.category_id === obj.id);\n        const tab = []\n        //console.log(filtreVoiture)\n        filtreVoiture && filtreVoiture.map((voiture, key) => {\n            const filtreResrvation = this.state.reservation.filter(res => res.voiture_id === voiture.id)\n            if (filtreResrvation.length === 0){\n                console.log(\"nodataReservation\")\n            }\n            else{\n                filtreResrvation.map(resrvCat => {   \n                    const Client = this.state.clients.filter(client => client.id === resrvCat.client_id)\n                    console.log(\"Reservation\", resrvCat)\n                    console.log(\"client\", Client)\n                    if (Client.length === 0){\n                        console.log(\"nodataClient\")\n                    }\n                    else{\n                        \n                        const res$key = {}\n                        res$key[\"Id\"] = key+1\n                        res$key[\"Subject\"] = Client[0].nom\n                        res$key[\"StartTime\"] = new Date(`${resrvCat.date_depart} ${resrvCat.heure_depart}`)\n                        res$key[\"EndTime\"] = new Date(`${resrvCat.date_retour} ${resrvCat.heure_retour}`)\n                        res$key[\"ResourceID\"] = key+1\n                        //res$key[\"Color\"] = 'red'\n                        tab.push(res$key)\n\n                    }\n                })\n            }  \n        })\n        //console.log(tab)\n        return tab\n    }\n\n    stock(voiture) {\n        const stockvoitur = []\n        for(let i=1; i<= voiture; i++){\n            const objet={}\n            objet['name']= `Stock  ${i}`\n            objet['id']= i\n            objet['color']= `#${i+1}fa900`\n            stockvoitur.push(objet)\n        }\n        return stockvoitur\n    }\n    \n    render() {\n        const categorye = this.state.categories\n        const images = this.state.imagevoiture \n\n        return (\n            <>\n            {categorye && images ? categorye.map((value, key) => {\n                return (\n                    <>\n                        <div className=\"text-white\">\n                            <div className=\"d-flex align-items-start m-1\">\n                                {/* <img src=\"images/Spark.jpg\" alt=\"image\"/> */}\n                                <fieldset>\n                                    {images[key] ? <img src={\n                                        `http://localhost:4000/${images[key].image.url}`\n                                        } alt ={images[key].marque}/> : \n                                        <p>Aucun Voiture</p>}\n                                </fieldset>\n                                \n                                <div className=\"m-1\">\n                                    <h1>Categorie: {value.name} </h1>\n                                    <span>Stock : {value.stock ? value.stock : 0} vehicule</span>\n                                </div>\n                            </div>\n                            \n                            {value.stock ? \n                            <ScheduleComponent width='100%' height='300px' selectedDate={new Date()} eventSettings={{ dataSource: this.data(value) }} group={{ resources: ['Resources'] }}>\n                                <HeaderRowsDirective height='10px'>\n                                {/* <HeaderRowDirective option='Year' template={this.yearTemplate.bind(this)}/>\n                                <HeaderRowDirective option='Month' template={this.monthTemplate.bind(this)}/> */}\n                                <HeaderRowDirective option='Week' template={this.weekTemplate.bind(this)}/>\n                                <HeaderRowDirective option='Date'/>\n                                </HeaderRowsDirective>\n                                <ViewsDirective>\n                                <ViewDirective option='TimelineMonth'/>\n                                <ViewDirective option='Month'/>\n                                </ViewsDirective>\n                                {/* <ResourcesDirective>\n                                    <ResourceDirective field='OwnerId' title='Owner' name='Owners' allowMultiple={true} dataSource={this.ownerData} textField='OwnerText' idField='Id' colorField='OwnerColor'>\n                                    </ResourceDirective>\n                                </ResourcesDirective> */}\n                                <ResourcesDirective>\n                                    <ResourceDirective dataSource={this.stock(value.stock)} allowMultiple={true} field='ResourceID' title='Resource Name' name='Resources' textField='name' idField='id' colorField='color'/>\n                                </ResourcesDirective>\n                                <Inject services={[Month, TimelineMonth]}/>\n                            </ScheduleComponent>: <div style={{width:'100%' ,height:'100px'}}> <center>Les stock de vehicule est vide</center></div>}\n                            <br/><br/>\n                        </div>\n                    </>\n                )\n            }):<h1 className=\"text-white\">Chargement ..........</h1>}\n            </>\n        )\n    }\n\n}\nexport default Planning;\n\n","/home/zo/Projet/gplocation/admin/src/pages/Category/Editer/Editer.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/Voitures/Voitures.js",["259"],"import React, { Component } from 'react';\nimport AddVoiture from './AddVoiture';\nimport ListeVoiture from './ListeVoiture';\n\nimport ListeCategory from '../ListeCategory';\nimport axios from '../../../axios';\n\nimport Modal from 'react-modal';\nimport { NavLink } from 'react-router-dom';\n\nclass Voitures extends Component {\n    state = {\n        addNew: false,\n        voitures: [],\n        categories: []\n    } \n\n    action = {\n        toggleModal: (value) => {\n            this.setState({ addNew: value })\n        },\n        getVoiture: () => {\n            axios.get('/voitures').then(response => {\n                if (response.status === 200) {\n                    this.setState({\n                        voitures: response.data\n                    })\n                }\n            })\n        },\n        deleteVoiture: (voiture) => {\n            axios.delete(`/voitures/${voiture.id}`).then(response => {\n                if (response.status === 204) {\n                    this.action.getVoiture();\n                }\n            })\n        },\n        getCategory: () => {\n            axios.get('/categories').then(response => {\n                if (response.status === 200) {\n                    this.setState({\n                        categories: response.data\n                    })\n                }\n            })\n        },\n    }\n\n\n    render() {\n        // Récupération de la variable voiture depuis le state\n        const { addNew, voitures } = this.state;\n        return (\n            <div className=\"p-5\">\n                <NavLink to=\"/categories\" >\n                    <button class=\"text-white bg-indigo-500 border-0 hover:bg-indigo-600 font-bold py-2 px-4 rounded\">Retour</button>\n                </NavLink>\n                <h1 className=\"mb-2 text-center text-white\">Gestion des voitures</h1>\n\n                <button\n                    className=\"px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded\"\n                    onClick={() => this.action.toggleModal(true)}>Nouvelle voiture</button>\n                <ListeVoiture\n                    action={{ ...this.action }}\n                    voitures={voitures} />\n                <Modal\n                    isOpen={addNew}\n                    className=\"modal-modern\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <div className=\"modal-title\">\n                                <h2 className=\"text-black text-center\">Insertion d'une nouvelle voiture</h2>\n                            </div>\n                            <div\n                                onClick={() => this.setState({ addNew: false })}\n                                className=\"modal-close\">X</div>\n                        </div>\n                        <hr className=\"my-4\" />\n\n\n                        <AddVoiture\n                            action={{ ...this.action }} />\n                    </div>\n                    \n                </Modal>\n            </div>\n        )\n    }\n}\n\n\nexport default Voitures;\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/ConfigurationAgence.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/TrifDeBase.js",["260"],"import React, { Component } from 'react'\nimport axios from '../../../axios'\n\nclass TrifDeBase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            saison: []\n        }\n    }\n    componentDidMount() {\n        this.getSaison();\n    }\n\n    getSaison = () => {\n\t\taxios.get('/saisons').then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsaison: response.data\n\n\t\t\t\t})\n\t\t\t\tconsole.log(response.data)\n\t\t\t}\n\t\t})\n    }\n    render() {\n        console.log(\"salut\")\n        return (\n            <>\n\n            <div>\n                <center>\n                    <h1>Gestion des Saison</h1>\n                    <br/>\n                    {this.state.saison.map(saison => {\n                            // return (\n                                \n                            //     <Link to={`/ajouterSaison/${(saison.nomSaison)}`}\n                            //     className=\"border border-green-500 bg-green-500 text-white rounded-md px-4 py-2 m-2 \n                            //     transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n                            //     >\n                            //     {saison.nomSaison}\n                            //     </Link>\n                            \n                            // );\n                        })}\n                \n                </center> \n            </div>\n            </>\n        )\n    }\n}\n\nexport default TrifDeBase;\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/Jours/Jours.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/TarifPeronnaliser.js",["261","262","263","264"],"import React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport {Formik, Field, Form} from 'formik';\nimport axios from '../../../axios';\n\n\nexport class TarifPeronnaliser extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lire: false,\n            categories: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get('/categories').then(response => {\n            if (response.status === 200) {\n                this.setState({\n                  category: response.data\n              });\n              console.log(response);\n            }\n          });\n    }\n    render() {\n        \n        return (\n            <div>\n            </div>\n        )\n    }\n}\n\nexport default TarifPeronnaliser\n\n ","/home/zo/Projet/gplocation/admin/src/pages/Message/ClientMessage.js",["265","266"],"import React, { Component } from 'react';\nimport axios from '../../axios';\n\nimport Modal from 'react-modal';\nimport './message.css'\n\nclass ClientMessage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lire: false,\n            contacts: []\n        };\n    }\n\n    componentDidMount() {\n        // Simple GET request using axios\n        this.getMessage();\n    }\n\n    getMessage = () => {\n        axios.get(`/contacts`)\n            .then(res => {\n                const contacts = res.data;\n                this.setState({ contacts });\n                console.log(res);\n            })\n    }\n    \n    deleteMessage = (message) => {\n        axios.delete(`/contacts/${message.id}`).then(response => {\n            if (response.status === 204) {\n                this.getMessage();\n            }\n        })\n    }\n\n   \n\n    render() {\n        \n        return (\n            <div>\n            <div class=\"col-md-12\">\n              <div class=\"contient-g\">\n                <div class=\"x_title\">\n                  <h2>MESSAGE DES CLIENTS</h2>\n                 \n                  <div class=\"clearfix\"></div>\n                </div>\n                <div class=\"x_content\">\n                  <ul class=\"list-unstyled msg_list\">\n                  { this.state.contacts.map(contact => {\n                                    return (\n                    <li>\n                      <a>\n                        <span>\n                          <span> <span className=\"Name-contact\"> Nom : </span>{contact.nom} </span><br/>\n                          <span> <span className=\"Name-contact\"> Prénom : </span>{ contact.prenom } </span><br/>\n                          <span> <span className=\"Name-contact\">Email : </span> { contact.email}</span><br/>\n                          <span> <span className=\"Name-contact\"> Téléphone :</span> { contact.telephone}</span><br />\n                          <span> <span className=\"Name-contact\"> Date :</span> { contact.created_at }</span><br />\n                        </span>\n                        <span className=\"Name-contact\"> Message : </span>\n                        <span className=\"message\">\n                        \n                        {contact.message} \n                        </span>\n                      </a>\n                      <span\n                        onClick={() => this.deleteMessage(contact)} \n                        className=\"delete\">\n                          <i>\n                            <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash-fill\" fill=\"red\" xmlns=\"http://www.w3.org/2000/svg\">\n                              <path fill-rule=\"evenodd\" d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"/>\n                            </svg>\n                          </i> \n                      </span>\n                    </li>\n                       )\n                    }) }\n                  </ul>\n                </div>\n              </div>\n            </div>\n         </div>\n        )\n    }\n}\n\nexport default ClientMessage;\n\n","/home/zo/Projet/gplocation/admin/src/pages/Reservation/Reservation.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/TarifList.js",["267"],"import React, { Component } from 'react'\nimport axios from '../../../axios';\n\nexport class TarifList extends Component {\n    \n    state = {\n        category: [],\n        voiture: []\n    }\n \n    componentDidMount(props) {\n        this.apiCategories();\n        console.log(this.props)\n\t}\n   \n    apiCategories = () => {\n        const id = this.props.category\n\t\taxios.get(`/categories/${id}}`).then(response => {\n\t\t\tif (response.status === 200) {\n                \n\t\t\t\tthis.setState({\n                    category: response.data.category\n                })\n\n                this.setState({\n                    voiture: response.data.voitures\n\t\t\t\t})\n\t\t\t\tconsole.log(response.data)\n            }\n            \n        })\n    };\n    \n    \n    \n    render(props) {\n        console.log(this.state.voiture)\n        const voiture = this.state.voiture\n        return (\n            <div>\n                <h4> {this.state.category.category}</h4>\n               \n                \n            </div>\n        )\n    }\n}\n\nexport default TarifList\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionJF/AjoutJour.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/calendrier/Indexs.js",["268","269"],"import React from 'react';\nimport moment, { weekdaysShort } from 'moment';\nimport Days from './Days'\nimport Month from './Month'\n\nclass Indexs extends React.Component {\n    state= {\n        date: moment()\n    }\n\n    weekdaysShort = moment.weekdaysShort();\n    years = () => {\n        return this.state.date.format(\"Y\") // annee de la date aujourdhui\n\n    }\n    week(jour){\n        let w=String(jour) \n        if (w ===\"sam.\" || w ===\"dim.\") {\n            return \"text-danger\"\n        } \n    }\n    render() {\n        let weekdays = this.weekdaysShort.map((day) => {\n                let classname = this.week(day)\n                return (\n                    <td className={classname}> {day}</td>\n                )\n        }\n        );\n        \n        return (\n            <div>\n                <center><h1><span className=\"calendar-label text-white\">\n                {this.years()}</span>  </h1></center>\n                <div className=\"bg-white rounded \">\n                    <table className=\"overflow-x text-black\" >\n                        <thead className=\"bg-dark text-white\">\n                            <tr>\n                            \n                            </tr>\n                            <tr>\n                                <td>\n                                    Mois\\jour\n                                </td>\n                                {weekdays}\n                                {weekdays}\n                                {weekdays}\n                                {weekdays}\n                                {weekdays}\n                                {weekdays}\n                                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr> \n                                <td>\n\n                                </td>\n                                \n                            </tr>\n                        <Month/>\n                        \n                        </tbody>\n\n                    </table>\n                </div> \n                \n            </div>\n            \n            \n        )\n    }\n}\n export default Indexs;","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/AddSaison.js",["270","271"],"import React, { Component, setStat} from 'react'\nimport axios from '../../../axios'\nimport { Formik, Form, Field } from 'formik';\nimport moment from 'moment' ;\nimport { NavLink } from 'react-router-dom';\nimport ErrorField from '../../../components/ErrorField/ErrorField';\nimport * as Yup from 'yup';\n\nconst SaisonSchema = Yup.object().shape({\n\tdebutsaison: Yup.date()\n\t\t.required('Vous devez entre la date de debut de saison'),\n\t\t// .transform(parseDateString).min(yesterday,\"la date de depart doit être supérieur à aujourd'hui\"),\n    finsaison: Yup.date()\n\t\t.required('Vous devez entre la date de fin de saison')\n\t\t.when('debutsaison',(debutsaison,schema) =>{\n\t\t\treturn schema.min(debutsaison,'La date fin saison doit être supérieur a la date de debut saison')\n\t\t}),\n});\n//import { parse, isDate } from \"date-fns\";\n\n// function parseDateString(value, originalValue) {\n//   const parsedDate = isDate(originalValue)\n//     ? originalValue\n//     : parse(originalValue, \"yyyy-MM-dd\", new Date());\n\n//   return parsedDate;\n// }\n\n// const today = new Date();\n// const yesterday = new Date(today);\n// yesterday.setDate(yesterday.getDate() - 1);\n\n\nclass AddSaison extends Component {\n    \n    state = {\n        saison : [],\n        datesaison : [],\n        date: ''\n    }\n    \n    componentDidMount() {\n        this.interval = setInterval(() =>\n            this.action.getDateSaison()\n            , 1000)\n        this.action.getSaison()    \n        \n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    action = {\n        getSaison: () => {\n            axios.get(`/saisons/${this.props.match.params.id}`).then(response => {\n                if (response.status === 200) {\n                    this.setState({\n                        saison: response.data\n                    });\n                    console.log(this.state.saison);\n                }\n            });\n        },\n        getDateSaison: () => {\n            axios.get(`/date_saisons`).then(response => {\n                if (response.status === 200) {\n                    this.setState({\n                        datesaison: response.data,\n                        \n                    });\n                   // console.log(datesaison);\n                }\n            });\n        },\n        \n        deleteSaison: (date) => {\n            axios.delete(`/date_saisons/${date.id}`).then(response => {\n                if (response.status === 204) {\n                    this.action.getDateSaison();\n                }\n            })\n        }\n    } \n    render() {\n        const saisone = this.state.saison.nomsaison\n        const date = this.state.datesaison\n        const fi = date.filter(person => person.saison_id == this.props.match.params.id);\n        \n        return (\n            <>  \n                <NavLink to=\"/gestion_saison\" >\n                    <button style= {{float:\"left\" ,margin:\"10px\"}} class=\"text-white bg-indigo-500 border-0 hover:bg-indigo-600 font-bold py-2 px-4 rounded\">Retour</button>\n                </NavLink>\n                <center className=\"text-white\">\n                    <h2>{saisone}</h2>\n                    <br/><h3>Ajouter nouvelle periode nesessaire</h3><br/>\n                    <div className=\"w-full max-w-lg text-justify\">\n                        <Formik\n                            initialValues={{\n                                saison_id: `${this.props.match.params.id}`,\n                                debutsaison:'',\n                                finsaison:''\n                                \n                            }}\n                            validationSchema={SaisonSchema}\n                            \n                            onSubmit={(data)=>{\n                                axios.post('/date_saisons',data).then(response => {\n                                    if (response.status === 204) {\n                                        this.action.getDateSaison();\n                                    }\n                            })}\n                        }\n                        >\t\n                            {({ errors, touched }) => (\n                            <Form className=\"flex flex-wrap -mx-3 mb-6\">\n                                    <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                                        <label className=\"block uppercase tracking-wide text-white text-xs font-bold mb-2\" >\n                                            Du :\n                                        </label>\n                                        <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 \n                                        px-4 mb-3 leading-tight focus:outline-none focus:bg-white\" type=\"date\" name=\"debutsaison\"/>\n                                        <ErrorField errors={errors} touched={touched} row=\"debutsaison\"/>\n                                    </div>\n                                    <div className=\"w-full md:w-1/2 px-3\">\n                                        <label className=\"block uppercase tracking-wide text-white text-xs font-bold mb-2\" htmlFor=\"grid-last-name\">\n                                            Au\n                                        </label>\n                                        <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 \n                                    px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" type=\"date\" name=\"finsaison\"/>\n                                        <ErrorField errors={errors} touched={touched} row=\"finsaison\"/>\n                                    </div>\n\n                                    <div className=\"d-flex justify-content-end\">\n                                        \n                                        <button\n                                            type=\"submit\"\n                                            className=\"border border-green-500 bg-green-500 text-white rounded-md px-4 py-2 m-2 \n                                            transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n                                        >\n                                            Valider\n                                        </button>\n                                    </div>\n                                    \n                            </Form>)}\n                        </Formik>\n                        \n                    </div>\n                    {/* <Listesaison id={this.props.match.params.id} ></Listesaison> */}\n\n                    {/* Liste de saison en date */}\n                    \n                    \n                    <div className=\"py-4\">\n                    <h2>Periode</h2>\n                    <div className=\"mt-2\">\n                        <table class=\"table table-condensed\">\n                            <tbody>\n                                { fi.map(dtesaison => {\n                                    return (\n                                        <tr>\n                                            <td ><span className=\"text-white\">Du  <strong>{moment(dtesaison.debutsaison).format('D MMMM Y')}</strong>   au   <strong>{moment(dtesaison.finsaison).format('D MMMM Y')}</strong></span></td>\n                                            <td ><span className=\"text-red-500 cursor-pointer\" onClick={() => this.action.deleteSaison(dtesaison)}>Supprimer</span></td>\n                                        </tr>\n                                    )\n                                }) }\n                                \n                            </tbody>\n                        </table>\n                    </div>\n                    \n                    {/* { utilisateurs && utilisateurs.length === 0 ? (<>Aucun utilisateur disponible pour le moment.</>) : null } */}\n                    \n                    \n                </div>\n                </center>\n            </>\n        )\n    }\n}\nexport default AddSaison","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/GestionTemp.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/Tarif.js",["272","273","274","275"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from '../../../axios'\nimport moment from 'moment'\nimport './tarif.css'\nimport { NavLink } from 'react-router-dom';\n\n\n\nclass Tarif extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: [],\n            category: [],\n            tarifperso: []\n        };\n    }\n\n\n    componentDidMount() {\n        this.getCategories();\n        this.getTarifPerso();\n    }\n    getTarifPerso = () => {\n        axios.get(`/tarif_personalises`).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    tarifperso: response.data\n                });\n                console.log(this.state.tarifperso);\n            }\n        });\n    }\n    deleteDate = (date) => {\n        axios.delete(`/tarif_personalises/${date.id}`).then(response => {\n            if (response.status === 204) {\n                this.getTarifPerso();\n            }\n        })\n    }  \n\n\tgetCategories = () => {\n\t\taxios.get('/categories').then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcategories: response.data\n\n\t\t\t\t})\n\t\t\t\tconsole.log(response.data)\n\t\t\t}\n\t\t})\n    }\n    Liste = () => {\n        return(\n            <>\n            {\n            this.state.categories.map((category, key) => {\n                const trieCategorie$key = this.state.tarifperso.filter(cat => cat.category_id == category.id);\n                console.log(\"categorie\",trieCategorie$key)\n                const trieDate$key = []\n                trieCategorie$key.map((date,keyDate) => {\n                    // const tab$keyDate = {}\n                    // tab$keyDate[\"debut\"]=date.datedebut\n                    // tab$keyDate[\"fin\"]=date.datefin\n                    trieDate$key.push(date.datedebutperso)\n                    trieDate$key.push(date.datefinperso)\n\n                })\n                console.log(\"tab\", trieDate$key)\n                const unique = trieDate$key.filter((v, i, a) => a.indexOf(v) === i);\n\n                console.log(\"unique\", unique)\n                return(\n                    <>\n                        <div className=\"p-2 border border-black\"style= {{background:\"dimGrey\"}}>\n                            <div className=\"m-1 w-full h-10 bg-blue rounded p-2\">\n                                <strong>{category.name}\n                                <span style= {{float:\"right\"}}> Duree min Bs:{category.duree_min_bs} jours- Dureé min MS: {category.duree_min_ms} jours - Dureé min: {category.duree_min_hs} jours\n                                </span></strong>\n                            </div>\n                            <br/>\n                            <Link to={`/ajouter_un_tarif/${(category.id)}`}\n                            className=\"border border-green-100 bg-green-500 text-white rounded-md px-3 m-1 py-2 \n                            transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n                            >\n                            Ajouter Tarif pour {category.name}\n                            </Link> \n                            {\n\n                                unique.map((val1, keyval) => {\n                                    const val$keyval = []    \n                                    trieCategorie$key.map(val3 => {\n                                        unique.map(val2=> {\n                                            if(val3.datedebutperso===val1 && val3.datefinperso===val2){\n                                                val$keyval.push(val3)\n                                            }\n                                        })\n                                    })\n                                    console.log(`val${keyval}`, val$keyval)\n\n                                    if (val$keyval.length === 0){\n                                        return(<>\n                                            <br/>\n                                            </>\n                                        )\n                                    }\n                                    else{ \n                                        return(\n                                            <>\n                                                    \n                                                <div className=\"py-4\">\n                                                    <div className=\"mt-2\">\n                                                        <div>\n                                                            <h3>\n                                                            Du <strong>{moment(val$keyval[0].datedebutperso).format('D MMMM Y')}</strong> \n                                                            au <strong>{moment(val$keyval[0].datefinperso).format('D MMMM Y') }\n                                                            </strong> \n                                                            <button className=\"text-white rounded m-2 bg-red-600 p-1\" style= {{float:\"right\"}} onClick={() => this.deleteDate(val$keyval[0])}>\n                                                            Supprimer\n                                                            </button>\n                                                            </h3>\n                                                            <br/>\n                                                        </div>\n\n                                                        <table className=\"table text-white table-striped jambo_table bulk_action border-black\">\n                                                            <thead className=\"bg-blue\">\n                                                            {val$keyval.map(val => {\n                                                                return(\n                                                                    <>\n                                                                        <th>\n                                                                        <span className=\"text-black\">{val.jourdebut} au {val.jourfin} Jour</span>\n                                                                        </th>\n                                                                    </>    \n                                                                    )\n                                                            })}                    \n                                                            </thead>\n                                                            <tbody className=\"\">\n                                                                <tr>\n                                                                {val$keyval.map(cat=>{\n                                                                    return(\n                                                                        <>\n                                                                        <td className=\"\">\n                                                                            <u>{cat.prix}</u> <br/>€/jours\n                                                                        </td>\n                                                                        </>\n                                                                    )\n                                                                })}                                            \n                                                                </tr>\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        )\n                                    }\n                                })\n                            \n                            }\n                        </div>\n                        <br/>\n                        <br/>   \n                    </>\n                )\n            })}\n        </>\n        )\n    }   \n    render() {\n        return (\n            <>\n            <div>\n                <NavLink to=\"/configuration_agence\" >\n                    <button style= {{float:\"left\" ,margin:\"10px\"}} class=\"text-white bg-indigo-500 border-0 hover:bg-indigo-600 font-bold py-2 px-4 rounded\">Retour</button>\n                </NavLink>\n                <center>\n                    <br/>\n                    <h1 className=\"text-white\">TARIF PERSONNALISER</h1>\n                    <br/><br/>\n                </center>\n                    \n                <br/>\n                {this.Liste()}\n            </div>\n            </>\n        )\n    }\n}\n\nexport default Tarif\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Paiment/Partiel.js",["276"],"\nimport React, { Component } from 'react'\nimport { Formik , Form, Field } from 'formik';\nimport axios from '../../../axios';\nimport { NavLink } from 'react-router-dom';\n\n\n\nexport default class Partiel extends Component {\n    state = {\n        inValue: null,\n        paiment: null\n\n    }\n    componentDidMount(){\n        this.getPaiment()\n        }\n    getPaiment(){\n        axios.get(`/paimentpartiels`).then(response => {\n            var value ={}\n            if (response.data.length ==! 0){\n                var objValue = response.data[0]\n               \n                console.log(objValue)\n        \n                value[`description`]= objValue.description\n                value[`typ`]= objValue.typ\n                value[`montant`]= objValue.montant\n                value[`minimal`]= objValue.minimal\n            \n\n                this.setState({\n                    inValue: value\n                })\n                console.log(this.state.inValue) \n            }else{\n                value[`description`]= ''\n                value[`typ`]= ''\n                value[`montant`]= ''\n                value[`minimal`]= ''\n                this.setState({\n                    inValue: value\n                })\n                console.log(\"coucou\")\n\n            }\n                  \n        })\n    }\n    \n    render() { \n        return (\n            <>\n                <center>\n                    <div className=\"page-title\">\n                        <div className=\"title_left\">\n                            <h2>Configuration</h2>\n                        </div>\n                    </div>\n                </center>\n                {this.state.inValue ?(\n                <Formik   \n                    initialValues={this.state.inValue}\n                    onSubmit={(value,{setSubmitting})=>{\n                        setSubmitting(true)                    \n                        axios.post(`/paimentpartiels` ,value)\n                        console.log(value)\n                        this.getPaiment()\n                        setSubmitting(false) \n                    }}\n                >\n                    \n                    <Form class=\"text-white\">\n                        <NavLink to=\"/configuration_agence\" >\n                            <button class=\"text-white m-2 bg-indigo-500 border-0 hover:bg-indigo-600 font-bold py-2 px-4 rounded\">Retour</button>\n                        </NavLink>\n                        <div className=\"d-flex align-items-start\">\n                            <label className=\"block text-white tracking-wide text-gray-700 text-xs font-bold w-25\" >\n                                Description paiment partiel\n                            </label>\n                            <div className=\"w-50\">\n                                <Field className=\"appearance-none block w-full bg-gray-200 input-lg h6 text-gray-700 border border-red-500 rounded py-3 \n                                px-3 mb-3 leading-tight focus:outline-none focus:bg-white\" component=\"textarea\" name= \"description\" />\n                                <p>ex: à régler à la remise des clés par cart bancaire, éspéces,chéque ou chéque vacances</p>\n                            </div>\n                        </div>\n                        <div className=\"d-flex align-items-start\">\n                            <label className=\"block text-white tracking-wide text-gray-700 text-xs font-bold w-25\" htmlFor=\"grid-last-name\">\n                                Type de l'acompte\n                            </label>\n                            <div className=\"w-50\">\n                                <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 \n                                px-3 mb-3 leading-tight focus:outline-none focus:bg-white\" type=\"number\" name= \"typ\" />\n                                <p>ex:0= pourcentage/1 = montant fixe</p>\n                            </div>\n                        </div>\n                        <div className=\"d-flex align-items-start\">\n                            <label className=\"block text-white tracking-wide text-gray-700 text-xs font-bold w-25\" htmlFor=\"grid-last-name\">\n                                Montant\n                            </label>\n                            <div className=\"w-50\">\n                                <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 \n                                px-3 mb-3 leading-tight focus:outline-none focus:bg-white\" type=\"number\" name= \"montant\" />\n                                <p>ex:100 si type montant fixe/ ou 30 si type pourcentage</p>\n                            </div>\n                        </div>\n                        <div className=\"d-flex align-items-start\">\n                            <label className=\"block text-white tracking-wide text-gray-700 text-xs font-bold w-25\" htmlFor=\"grid-last-name\">\n                                Montant minimal pour le declenchement du paiment partiel\n                            </label>\n                            <div className=\"w-50\">\n                                <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 \n                            px-3 mb-3 leading-tight focus:outline-none focus:bg-white\" type=\"number\" name= \"minimal\" />\n                                <p>ex:150</p>\n                            </div>\n                        </div>\n\n                        <div className=\"w-full md:w-1/2 px-3\">   \n                            <button\n                                type=\"submit\"\n                                className=\"border border-green-500 bg-green-500 text-white rounded-md px-4 py-2 m-2 \n                                transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n                            >\n                                Valide le modification\n                            </button>\n                        </div>\n                            \n                    </Form>\n                </Formik>):<h1>Loading</h1>}\n            </>\n        )\n    }\n}\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/GestionSaison.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Dashbord/Dashbord.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/AddTarif.js",["277","278","279"],"import React, { Component, setSate } from 'react'\nimport { Formik, Form, Field } from 'formik';\nimport UnPrix from './UnPrix';\nimport axios from '../../../axios';\nimport moment from 'moment' ;\n\n\nimport { NavLink } from 'react-router-dom';\n\n\nclass AddTarif extends Component {\n    \n    state = {\n        categories: [],\n        voiture: [],\n        nombreLigne: [1,2,3],\n        tarifperso: [],\n        dateTarif: []\n\n    };\n    \n    listeTarif =() => {\n        window.location.href =\"/tarif\"\n     }\n\n    componentDidMount() {\n        this.getCategories();  \n    }\n    ajoutNewPeriod =() =>{\n        this.setState({\n            nombreLigne: [\n                ...this.state.nombreLigne,this.state.nombreLigne.pop() + 1\n            ]\n        })\n        \n    }\n    \n    \n\tgetCategories = () => {\n\t\taxios.get(`/categories/${this.props.match.params.id}`).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcategories: response.data\n\t\t\t\t});\n\t\t\t\tconsole.log(this.state.categories);\n\t\t\t}\n\t\t});\n    };\n    \n   \n\n    render() {\n       \n        const category = this.state.categories.category\n        const voitures = this.state.categories.voitures  \n        \n        return (\n            <>\n                <NavLink to=\"/tarif\" >\n                    <button style= {{float:\"left\" ,margin:\"10px\"}} class=\"text-white bg-indigo-500 border-0 hover:bg-indigo-600 font-bold py-2 px-4 rounded\">Retour</button>\n                </NavLink>\n                <center className=\"text-white\">\n                    <h1>Tarif personnaliser pour {category && category.name }, reference {category && category.ref}</h1>\n                    <br/>\n                    <div className=\"d-flex p-0 justify-content-center align-items-center\">\n                        {voitures && voitures.map(voiture => {\n                            return (\n                                <>\n                                    <div className=\"m-1\">\n                                        <fieldset>\n                                            \n                                            <img src={`http://localhost:4000/${voiture.image.url}`} />\n                                        </fieldset>\n                                        <p><strong>{voiture.marque}</strong></p>\n                                        <br/>\n                                    </div>\n                                </>\n                            )\n                        })}\n                    </div>\n                    <div className=\"w-full max-w-lg text-justify\">\n                        <Formik\n                            initialValues={{\n                                category_id: `${this.props.match.params.id}`,\n                                dateDebutPerso:'',\n                                dateFinPerso:'',\n                                \n                            }}\n                            onSubmit={(data, {setSubmitting})=>{\n                                setSubmitting(true);\n                                                    \n                                axios.post('/tarif_personalises',{data, tabLigne:this.state.nombreLigne})\n                                console.log(data)\n                                setSubmitting(false)\n                            }}>\n\n                            <Form className=\"flex flex-wrap -mx-3 mb-6\">\n                                <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                                    <label className=\"block uppercase tracking-wide text-gray-700 text-white font-bold mb-2\" >\n                                        Du :\n                                    </label>\n                                    <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 \n                                    px-4 mb-3 leading-tight focus:outline-none focus:bg-white\" type=\"date\" name=\"dateDebutPerso\"/>\n                                </div>\n                                <div className=\"w-full md:w-1/2 px-3\">\n                                    <label className=\"block uppercase tracking-wide text-gray-700 text-white font-bold mb-2\" htmlFor=\"grid-last-name\">\n                                        Au\n                                    </label>\n                                    <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 \n                                px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" type=\"date\" name=\"dateFinPerso\"/>\n                                </div>\n                                \n                                {\n                                    this.state.nombreLigne.map((ligne) => \n                                        <UnPrix key={ligne} num={ligne} />\n                                        )\n                                }\n                                \n                                <div className=\"d-flex justify-content-end\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"border border-blue-500 bg-blue-500 text-white rounded-md px-4 py-2 m-2 \n                                        transition duration-500 ease select-none hover:bg-blue-600 focus:outline-none focus:shadow-outline\" \n                                        onClick={this.ajoutNewPeriod}\n                                    >\n                                        Ajouter un ligne\n                                    </button>\n                                   \n                                    <button\n                                        type=\"submit\" onClick={this.listeTarif}\n                                        className=\"border border-green-500 bg-green-500 text-white rounded-md px-4 py-2 m-2 \n                                        transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n                                    >\n                                        Valider\n                                    </button>\n                                </div>\n                                \n                            </Form>\n                        \n                        </Formik>\n                    </div>\n\n                </center>\n                 \n                \n                    \n                    {/* { utilisateurs && utilisateurs.length === 0 ? (<>Aucun utilisateur disponible pour le moment.</>) : null } */}    \n                \n                \n            </>\n        )\n    }\n}\n\nexport default AddTarif;\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionJF/GestionJF.js",["280","281","282"],"import React, { Component} from 'react'\nimport axios from '../../../../../axios'\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form} from 'formik';\nimport DeuxJourFerier from './DeuxJourFerier';\nimport moment from 'moment'\n\n//import '../GestionOF/gestionOF.css'\n\nclass GestionJF extends Component {\n    constructor(props) {\n        super(props);\n        this.deletejour = this.deletejour.bind(this);\n        this.state = {\n            ligne: [],\n            anneUnique : [],\n            objetData: [],\n            initVal:null\n        }\n    }\n    async componentDidMount(){\n        await this.getJourferier()\n    }\n    async getJourferier(){\n        await axios.get('/jourferiers').then(res=>{\n            if(res.status===200) {\n                this.setState({\n                    objetData: res.data\n                })\n                console.log(this.state.objetData)\n            }\n            const anne = []\n            const id = []\n            const inValue = {}\n            this.state.objetData.map(val => {\n                anne.push(moment(val.dateferie).format(\"Y\"))\n                inValue[`dateD${val.id}`]=val.dateferie\n                inValue[`jourD${val.id}`]=val.evenement\n                inValue[`prixD${val.id}`]=val.surplus\n                inValue[`checkD${val.id}`]=\"\"\n                id.push(val.id)\n            })\n            const unique = anne.filter((v, i, a) => a.indexOf(v) === i);\n            //console.log(\"uni\", unique)\n            const tab =[]\n            unique.map((val, key) => {\n                const obj = []\n                this.state.objetData.map(anne =>{\n                    if(val===moment(anne.dateferie).format(\"Y\")){\n                        obj.push(anne)\n                    }\n                })\n                tab.push(obj)\n            })\n            console.log(\"unique\", tab)\n            this.setState({\n                anneUnique: tab,\n                initVal: inValue,\n                ligne: id\n            })\n                \n        })\n    }\n    async deletejour (id)  {\n        await axios.delete(`/jourferiers/${id}`).then(response => {\n           this.getJourferier()\n        })\n        \n    } \n    render() {\n        //let obj=Object.assign( {}, this.state.initValue1,this.state.initValue2)\n        //console.log(this.state.objetData.pop())\n        const ligne = this.state.ligne\n        return (\n            <>\n                <div className=\"m-4\">\n                    <div className=\"page-title\">\n                        <div className=\"title_left\">\n                            <h2> GESTION DES JOUR FERIES </h2>\n                        </div>\n                    </div>\n                    <div >\n                        <NavLink to=\"/ajoutjourferier\" >\n                            <button style= {{float:\"right\" ,margin:\"10px\"}} class=\"text-white bg-indigo-500 border-0 hover:bg-indigo-600 font-bold py-2 px-4 rounded\">Ajouter Nouveau jourferier</button>\n                        </NavLink>\n\n                    </div>\n                    {this.state.initVal  ? \n                    <div className=\"row\">\n                    <Formik\n                        initialValues={this.state.initVal}    \n                        onSubmit={(value)=>{\n                            axios.post('/updatejours', {value, ligne}).then(response => {\n                                this.setState({\n                                    anneUnique : [],\n                                    objetData: [],\n                                    initVal:null   \n                                })\n                               this.getJourferier()\n                            })\n                              \n                        }}\n                    \n                    >\n                        <Form class=\"w-full text-white\">\n                            {this.state.anneUnique.length === 0 ?\n                            <h1>Ajouter un jour  ferier</h1> : this.state.anneUnique.map(jour =>{\n                                return(\n                                    <>\n                                    <h1>{moment(jour[0].dateferie).format('Y')}</h1>\n                                    <br/>\n\n                                    <table class=\"text-white w-200\">\n                                        <thead>\n                                            <th>\n                                                <td> Dates </td>\n                                                                                                \n                                            </th>\n                                            <th>\n                                                <td> Jour ferier </td>\n                                                                                                \n                                            </th>\n                                            <th>\n                                                <td> Surplus </td>\n                                                                                                \n                                            </th>\n                                             <th>\n                                                <td> Activer pour modifier </td>\n                                                                                                \n                                            </th>\n                                            <th>\n                                                <td> Suppression </td>\n                                                                                                \n                                            </th>\n                                        </thead>\n                                        {jour.map(anne =>\n\n                                            <DeuxJourFerier key={anne.id} nbr={anne.id} deletejour={this.deletejour}/>\n\n                                        )}\n                                    </table>\n                                    </>\n                                )  \n                            })}\n                             <button\n                                type=\"submit\"\n                                className=\"border border-green-500 bg-green-500 text-white rounded-md px-4 py-2 m-2 \n                                transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n                            >\n                                Valider la modification\n                            </button>\n                            \n                        </Form>             \n                    </Formik>\n                    \n                </div>:<h1>Chargement......</h1>}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default GestionJF;\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionOF/GestionOF.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionFE/GestionFE.js",["283"],"import React, { Component, setStat} from 'react'\nimport axios from '../../../../../axios'\nimport { Formik, Form, Field } from 'formik';\nimport '../GestionOF/gestionOF.css'\nimport moment from 'moment' ;\nimport ErrorField from '../../../../../components/ErrorField/ErrorField';\nimport * as Yup from 'yup';\n\nconst FermetureSchema = Yup.object().shape({\n\tjourfermedebut: Yup.date()\n\t\t.required('Vous devez entre la date de debut de fermeture exceptionnel'),\n\t\t// .transform(parseDateString).min(yesterday,\"la date de depart doit être supérieur à aujourd'hui\"),\n    jourfermefin: Yup.date()\n\t\t.required('Vous devez entre la date de fin de fermeture exceptionnel')\n\t\t.when('jourfermedebut',(jourfermedebut,schema) =>{\n\t\t\treturn schema.min(jourfermedebut,'La date fin doit être supérieur a la date de debut de fermeture exceptionnel')\n\t\t}),\n});\n\nclass GestionFE extends Component {\n    \n    state = {\n\n        dateF : []\n    }\n    \n    componentDidMount() {\n        this.interval = setInterval(() =>\n            this.action.getFerme()\n            ,1000)\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n    action = {\n        getFerme: () => {\n            axios.get(`/fermexceptions`).then(response => {\n                if (response.status === 200) {\n                    this.setState({\n                        dateF: response.data\n                    });\n                    console.log(this.state.dateF);\n                }\n            });\n        },\n        \n        deleteFerme: (ferme) => {\n            axios.delete(`/fermexceptions/${ferme.id}`).then(response => {\n                if (response.status === 204) {\n                    this.action.getFerme();\n                }\n            })\n        }\n    } \n    render() {\n        return (\n            <>\n                    <div className=\"page-title\">\n                        <div>\n                            <h2>GESTION DES FERMETURES EXECEPTIONNEL </h2>\n                        </div>\n                    </div>\n                    <h3>Ajouter autant de periode fermeture nécessaire </h3>\n                    <br/><br/>\n                    <div className=\"row\">\n                    <Formik\n                        initialValues={{\n                            jourfermedebut: '',\n                            jourfermefin:''\n                            \n                        }}\n                        validationSchema={FermetureSchema}\n                        onSubmit={(data, { resetForm })=> {                  \n                            axios.post('/fermexceptions', data).then(response => {\n                                if (response.status === 201) {   \n                                    this.action.getFerme();  \n                                }\n                            })   \n                            resetForm({});\n                        }}\n                    \n                    >\n                        {({ errors, touched }) => (\n                            <Form className=\"d-flex align-items-start\">\n                            <div className=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n                                <label className=\"block text-white tracking-wide text-gray-700 text-xs font-bold mb-2\" >\n                                    Du :\n                                </label>\n                                <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 \n                                px-4 mb-3 leading-tight focus:outline-none focus:bg-white\" type=\"date\" name=\"jourfermedebut\"/>\n                                <ErrorField errors={errors} touched={touched} row=\"jourfermedebut\"/>\n                            </div>\n                            <div className=\"w-full md:w-1/2 px-3\">\n                                <label className=\"block text-white tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"grid-last-name\">\n                                    Au\n                                </label>\n                                <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 \n                            px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" type=\"date\" name=\"jourfermefin\"/>\n                                <ErrorField errors={errors} touched={touched} row='jourfermefin'/>\n                            </div>\n\n                            <div className=\"w-full md:w-1/2 px-3\">\n                                        \n                                <button\n                                    type=\"submit\"\n                                    className=\"border border-green-500 bg-green-500 text-white rounded-md px-4 py-2 m-2 \n                                    transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n                                >\n                                    Ajouter\n                                </button>\n                            </div>  \n                        </Form>)} \n                    </Formik>\n                </div>\n\n                {/* Liste des jour exceptionel */}\n                \n                <div className=\"py-4\">\n                    \n                    <div className=\"mt-2\">\n                        <table class=\"table table-condensed\">\n                           <thead>\n                              <tr>\n                              <th>Periodes ferme exceptionel </th>\n                              <th>Action</th>\n                              \n                              </tr>\n                           </thead>\n                            <tbody>\n                                { this.state.dateF.map(nomdate => {\n                                    return (\n                                        <tr>\n                                          <td className=\"text-white\"><strong>{moment(nomdate.jourfermedebut).format('D MMMM Y')  }</strong>  jusqu'a  <strong>{ moment(nomdate.jourfermefin).format('D MMMM Y') }</strong></td>\n                                          <td ><span className=\"text-red-500 cursor-pointer\" onClick={() => this.action.deleteFerme(nomdate)}>Supprimer</span></td>\n                                            \n                                        </tr>\n                                    )\n                                }) }\n                                \n                            </tbody>\n                        </table>\n                    </div>\n                    \n                    {/* { utilisateurs && utilisateurs.length === 0 ? (<>Aucun utilisateur disponible pour le moment.</>) : null } */}\n                    \n                    \n                </div>\n            </>\n        )\n    }\n}\nexport default GestionFE","/home/zo/Projet/gplocation/admin/src/axios.js",[],"/home/zo/Projet/gplocation/admin/src/redux/Auth/auth.action.js",[],"/home/zo/Projet/gplocation/admin/src/components/Navbar/UserProfil.js",[],"/home/zo/Projet/gplocation/admin/src/redux/Auth/auth.reducer.js",["284"],"let token = null;\nlet user = null;\nlet isAuthenticated = false;\n\nconst jwtToken = window.localStorage.getItem('jwtToken');\nconst userStorage = JSON.parse(window.localStorage.getItem('user'));\n\nif (jwtToken) {\n    token = jwtToken;\n    isAuthenticated = true;\n}\n\nif (userStorage) {\n    user = userStorage;\n}\n\nconst initialState = {\n    token,\n    user,\n    isAuthenticated,\n    isAuthenticating: false,\n    error: null\n}\n\nexport default(state = initialState, action) => {\n    switch (action.type) {\n        case 'AUTH_LOGIN_REQUEST':\n            return {\n                ...state,\n                isAuthenticating: true\n            }\n\n        case 'AUTH_LOGIN_ERROR':\n            return {\n                ...state,\n                isAuthenticating: false,\n                error: action.error\n            }\n\n        case 'AUTH_LOGIN_SUCCESS':\n            return {\n                ...state,\n                token: action.token,\n                user: action.user,\n                isAuthenticated: true,\n                isAuthenticating: false\n            }\n\n        case 'AUTH_REFRESH_USER':\n                return {\n                    ...state,\n                    user: action.user\n                }\n\n        case 'AUTH_LOGOUT_SUCCESS':\n            return {\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isAuthenticating: false\n            }\n            \n        default: \n            return state\n    }\n}","/home/zo/Projet/gplocation/admin/src/pages/Utilisateurs/AddUtilisateur.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Utilisateurs/ListeUtilisateur.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/ListeCategory.js",["285","286"],"import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios'\nimport { Formik, Field, Form} from 'formik';\n\nlet i = 0;\nexport default class ListeCategory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {categ: '',intvalue:null, id:[], imagevoiture: null}; \n  }\n\n  // componentWillUnmount() {\n  //     clearInterval(this.interval);\n  // }\n\n  async componentDidMount() {\n      const { action } = this.props;\n      action.getCategory();\n      await this.getCat();\n      await this.getImageVoiture()\n      // this.interval = setInterval(() =>\n      //   action.getCategory()\n      // , 1000) \n\n  }\n  async getImageVoiture(){\n    await axios.get(`/categorieVehicule`).then(response => {\n      if (response.status === 200) {\n        this.setState({\n          imagevoiture: response.data\n        })\n        // console.log(\"Mety\", this.state.imagevoiture[0].image.url)\n      }\n    }) \n  };\n\n  async getCat(){\n    await axios.get('/categories').then(response => {\n      if (response.status === 200) {\n        this.setState({\n            categ: response.data\n            \n        })\n        console.log(this.state.categ) \n      }\n      const initvalues = {}\n      const ids = []\n      this.state.categ.map((value)=>{\n        initvalues[`val${value.id}`] = value.stock\n        initvalues[`ligne${value.id}`] = value.enligne\n        ids.push(value.id)\n        \n      })\n      this.setState({\n        intvalue: initvalues,\n        id: ids\n      })\n    })\n  }\n\n  deletecat(cat) {\n    axios.delete(`/categories/${cat}`).then(response => {\n      if (response.status === 204) {\n        const { action } = this.props;\n        action.getCategory();\n      }\n    })\n  }\n  \n  render() {\n    const { categories, action } = this.props;\n    const stocId= this.state.id\n    const images = this.state.imagevoiture\n    return (\n      <>\n        {this.state.intvalue && images ?\n          <Formik\n            initialValues={this.state.intvalue}\n            onSubmit={(value,{setSubmitting})=>{\n              setSubmitting(true);\n              axios.post('/categorie/stock', {\n                  value, stocId\n              })\n             \n              setSubmitting(false);  \n            }} \n          >\n            <Form class=\"w-full\">\n          \n              <div className=\"py-4\">\n                  <div class=\"col-md-12 col-sm-12 \">\n                    <div class=\"x_panel\">\n                      <div class=\"x_content\">\n                        <div class=\"table-responsive\">\n                          <table class=\"table table-striped jambo_table bulk_action\">\n                            <thead className=\"text-center\">\n                              <tr class=\"headings\">\n                                <th class=\"column-title\"></th>\n                                <th class=\"column-title\">ref </th>\n                                <th class=\"column-title\">Titre du produit </th>\n                                <th class=\"column-title\">Stock</th>\n                                <th class=\"column-title\">En ligne </th>\n                                <th class=\"column-title no-link last\">Classement</th>\n                                <th class=\"column-title\">Action</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {categories && categories.map((category, key) => {\n                                return (  \n                                  <tr class=\"even pointer\">\n                                    {/* <img src={`http://localhost:4000/${voiture.image.url}`} alt ={voiture.marque}/> */}\n                                    {images[key] ? <td className=\"text-center\"><img src={`http://localhost:4000/${images[key].image.url}`} alt ={images[key].marque}/></td> : <td className=\"text-center\">Aucun image</td>}\n                                      \n                                    <td className=\"text-center\">{category.ref} <i class=\"success fa fa-long-arrow-up\"></i></td>\n                                    <td className=\"text-center\">{category.name}</td>\n                                    <td >\n                                        <Field className=\"bg-gray-200 text-gray-700 border border-red-500 rounded py-2 px-1\" \n                                        style={{width:\"50px\"}} type=\"number\"  name= {[`val${category.id}`]}/> \n                                    </td>\n                                    <td>\n                                      <span><Field className=\"w-50\" type=\"checkbox\"  id={category.id} name={[`ligne${category.id}`]} /></span>\n                                    </td>\n                                    <td className=\"text-center\">\n                                        {key+1}\n                                    </td>\n                                    <td className=\"\">\n                                      <NavLink to={`/categories/${category.id}`}>\n                                        <span className=\"border border-yellow-500 bg-yellow-500 text-white rounded-md px-3 py-3 m-1\n                                        transition duration-500 ease select-none hover:bg-yellow-600 focus:outline-none focus:shadow-outline\" >\n                                          <i class=\"fa fa-edit\"></i> Edit\n                                        </span>\n                                      </NavLink>\n                                      <button\n                                        type=\"submit\"\n                                        className=\"border border-green-500 bg-green-500 text-white rounded-md px-1 py-3 m-1\n                                        transition duration-500 ease select-none hover:bg-green-600 focus:outline-none focus:shadow-outline\"\n                                      >\n                                        Valider\n                                      </button>\n                                      <button\n                                        type=\"button\" onClick={() => this.deletecat(category.id)}\n                                        className=\"border border-green-500 bg-red-400 text-white rounded-md px-1 py-3 m-1\n                                        transition duration-500 ease select-none hover:bg-red-600 focus:outline-none focus:shadow-outline\"\n                                      >\n                                        Supprimer\n                                      </button> \n                                    </td>\n                                  </tr>\n                                )\n                              })}\n                            </tbody>\n                          </table>                        \n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          </Formik>: <h1 className=\"text-white\">Charger</h1>}\n      </>\n    )\n  }\n}\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/calendrier/Month.js",["287","288","289","290"],"import React from 'react';\nimport moment from 'moment';\nimport Days from './Days'\nimport axios from '../../../../axios'\n\nclass Month extends React.Component {\n    \n    constructor (propos) {\n        super(propos)\n        this.state = {\n            dateObj: moment(),\n            datesaison: []\n        }\n    }\n    async componentDidMount(){\n        //console.log(this.props.month)\n        //await this.setMonth(this.props.month)\n        await this.getDateSaison();\n        // console.log(this.state.dateContext)\n    }\n    async getDateSaison () {\n        await axios.get(`/date_saisons`).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    datesaison: response.data,\n                    \n                });\n               //console.log(this.state.datesaison);\n            }\n        });\n    }\n\n    weekdays = moment.weekdays();\n    months  = moment.months();\n\n    month = () => {\n        return this.state.dateObj.format(\"MMMM\") // Moi de la date aujourdhui\n    }\n    currentDate = () => {\n        return this.state.dateObj.get(\"date\");\n    }\n    capitalize(s) {\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n    listeJour = () => {\n        const date = this.state.datesaison\n        let hash = []\n        date.map((date) =>{\n            if((moment(date.debutsaison).format('Y') || moment(date.finsaison).format('Y')) === moment().format('Y')){\n                let debut = moment(date.debutsaison)\n                let fin = moment(date.finsaison)\n                let saison = date.saison_id\n                //console.log(debut.format('M'))\n                let anneD = parseInt(debut.format('Y'))\n                let moisD = parseInt(debut.format('M'))\n                let jourD = parseInt(debut.format('D'))\n                let anneF = parseInt(fin.format('Y'))\n                let moisF = parseInt(fin.format('M'))\n                let jourF = parseInt(fin.format('D'))\n                if (anneD === anneF){\n                    if(moisD === moisF){\n                        if(jourD <= jourF ){\n                            for(let i = jourD; i <= jourF; i++ ){\n                                let saison$i = {}\n                                saison$i[\"anne\"]= anneD\n                                saison$i[\"mois\"]= debut.format('MMMM')\n                                saison$i[\"jour\"] = i\n                                saison$i[\"saison\"] = saison\n                                hash.push(saison$i)\n\n                            }\n                        }\n                        else{\n                            console.log(\"eureu\")\n                        }\n\n                    }else if(moisF === moisD+1){\n                        for(let j = jourD; j<= debut.daysInMonth(); j++ ){\n                            let saison$j = {}\n                            saison$j[\"anne\"]= anneD\n                            saison$j[\"mois\"]= debut.format('MMMM')\n                            saison$j[\"jour\"] = j\n                            saison$j[\"saison\"] = saison\n                            hash.push(saison$j)\n                        }\n                        for(let k=1; k<= jourF; k++){\n                            let saison$k = {}\n                            saison$k[\"anne\"]= anneD\n                            saison$k[\"mois\"]= fin.format('MMMM')\n                            saison$k[\"jour\"] = k\n                            saison$k[\"saison\"] = saison\n                            hash.push(saison$k)\n                        }\n\n                    }else if(moisF === moisD+2){\n                        for(let jk = jourD; jk<= debut.daysInMonth(); jk++ ){\n                            let saison$jk = {}\n                            saison$jk[\"anne\"]= anneD\n                            saison$jk[\"mois\"]= debut.format('MMMM')\n                            saison$jk[\"jour\"] = jk\n                            saison$jk[\"saison\"] = saison\n                            hash.push(saison$jk)\n                        }\n                        for(let kl=1; kl<= debut.add(1, 'month').daysInMonth(); kl++){\n                            let saison$kl = {}\n                            saison$kl[\"anne\"]= anneD\n                            saison$kl[\"mois\"]= debut.add(1, 'month').format('MMMM')\n                            saison$kl[\"jour\"] = kl\n                            saison$kl[\"saison\"] = saison\n                            hash.push(saison$kl)\n                        }\n                        for(let l=1; l<= jourF; l++){\n                            let saison$l = {}\n                            saison$l[\"anne\"]= anneD\n                            saison$l[\"mois\"]= fin.format('MMMM')\n                            saison$l[\"jour\"] = l\n                            saison$l[\"saison\"] = saison\n                            hash.push(saison$l)\n                        }\n                    }\n\n                }else if(anneD<anneF){\n                    if(moisD===12){\n                        for(let m = jourD; m<= debut.daysInMonth(); m++){\n                            let saison$m = {}\n                            saison$m[\"anne\"]= anneD\n                            saison$m[\"mois\"]= debut.format('MMMM')\n                            saison$m[\"jour\"] = m\n                            saison$m[\"saison\"] = saison\n                            hash.push(saison$m)\n\n                        }\n                    }else if(moisD===1){\n                        for(let n = jourD; n<= debut.daysInMonth(); n++){\n                            let saison$n = {}\n                            saison$n[\"anne\"]= anneD\n                            saison$n[\"mois\"]= debut.format('MMMM')\n                            saison$n[\"jour\"] = n\n                            saison$n[\"saison\"] = saison\n                            hash.push(saison$n)\n\n                        }\n                        for(let o=1; o<= debut.add(1, 'month').daysInMonth(); o++){\n                            let saison$o = {}\n                            saison$o[\"anne\"]= anneD\n                            saison$o[\"mois\"]= debut.add(1, 'month').format('MMMM')\n                            saison$o[\"jour\"] = o\n                            saison$o[\"saison\"] = saison\n                            hash.push(saison$o)\n                        }\n\n                    }\n\n                }\n                else{\n                    console.log(\"non\")\n                }\n            }else{\n                console.log(\"date n'existe\")\n            }\n\n        });\n        return hash\n    }\n\n    render() {\n        let months = this.months.map((mon) => {\n            const filtreMois = this.listeJour().filter(unmois => unmois.mois === mon)\n            //console.log(filtreSaison)\n            const filtreSaison1 = filtreMois.filter(sai => sai.saison === 1)\n            const filtreSaison2 = filtreMois.filter(sai => sai.saison === 2)\n            const filtreSaison3 = filtreMois.filter(sai => sai.saison === 3)\n\n            const tab1 = []\n            const tab2 = []\n            const tab3 = []\n\n            filtreSaison1.map(val=> {tab1.push(val.jour)})\n            filtreSaison2.map(val=> {tab2.push(val.jour)})\n            filtreSaison3.map(val=> {tab3.push(val.jour)})\n            return (\n                <>  \n                    <tr key={mon}>\n                        <td> {this.capitalize(String(mon))}</td>\n                        <Days month ={mon} tableau1 ={tab1} tableau2 ={tab2} tableau3 ={tab3}/>\n                    </tr>\n                </>\n            )  \n        })\n        return (\n            <>\n            {months}\n            </>\n            )\n    }\n}\n export default Month;\n\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionSaison/calendrier/Days.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/AddCategory.js",[],"/home/zo/Projet/gplocation/admin/src/components/ErrorField/ErrorField.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Dashbord/ChiffreAffaire.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305"],"import React, { Component } from 'react';\nimport {Line} from 'react-chartjs-2';\nimport axios from 'axios'\nimport moment from 'moment'\n\nexport default class ChiffreAffaire extends Component {\n \n  state ={\n    dateMonment: moment(),\n    reservation:[],\n    showMonth: false,\n    showYears: false,\n    allmonths :moment.months()\n  }\n  constructor(props) {\n    super(props)\n  }\n  months  = moment.months();\n  daysInMonths = () => {\n    return this.state.dateMonment.daysInMonth(); // nombre de jour dans un moi\n  }\n\n  month = () => {\n    return this.state.dateMonment.format(\"MMMM\");\n  };\n\n  years = () => {\n    return this.state.dateMonment.format(\"Y\");\n  };\n\n  componentDidMount(){\n    this.getResvation()\n  }\n\n  getResvation(){\n    axios.get('/reservation/liste').then(res =>{\n      if(res.status===200){\n        this.setState({\n          reservation: res.data\n        })\n      }\n    })\n  }\n\n  setMonth = month => {\n    let monthNo = this.months.indexOf(month);// get month number \n    let dateMonment = Object.assign({}, this.state.dateMonment);\n    dateMonment = moment(dateMonment).set(\"month\", monthNo); // change month value\n    this.setState({\n      dateMonment: dateMonment // add to state\n    });\n  };\n\n  setYear = year => {\n    let dateMonment = Object.assign({}, this.state.dateMonment);\n    dateMonment = moment(dateMonment).set(\"year\", year);\n    this.setState({\n      dateMonment: dateMonment\n    });\n  };\n\n  showMonth = (e, month) => {   \n    this.setState({  \n       showMonth: !this.state.showMonth   \n    });\n  };\n\n  showYear = (e) => {\n    this.setState({\n        showYears: !this.state.showYears\n    });\n  };\n\n  MonthList = props => {\n    let months = [];\n    props.data.map(data => {\n      months.push(\n        <td key={data} className=\"m-1\"\n          onClick={e => {\n            this.setMonth(data);\n          }}\n        >\n          <a href=\"#\">{this.capitalize(String(data))}</a>\n        </td>\n      );\n    });\n    let rows = [];\n    let cells = [];\n    months.forEach((row, i) => { \n      if (i % 6 !== 0 || i == 0) { // except zero index \n          cells.push(row); \n      } else { \n          rows.push(cells); \n          cells = [];\n          cells.push(row); \n      }\n    });\n    rows.push(cells); // add last row\n    let monthlist = rows.map((d, i) => {\n      return <tr>{d}</tr>;\n    });\n    \n    return (\n      <table className=\"table w-25 text-white border\">\n        <tbody>{monthlist}</tbody>\n      </table>\n    );\n  }\n  getDates = (startDate, stopDate) => {\n    var dateArray = [];\n    var currentDate = moment(startDate);\n    var stopDate = moment(stopDate);\n    while (currentDate <= stopDate) {\n      dateArray.push(moment(currentDate).format(\"YYYY\"));\n      currentDate = moment(currentDate).add(1, \"year\");\n    }\n    return dateArray\n  }\n\n  yearClick() {\n    return <p className=\"text-white m-2\"> Selection anne suivant ou precedent</p>\n  }\n\n  onPrev = () => {\n    let curr = \"\";\n    if (this.state.showYears == true) {\n      curr = \"year\";\n    } else {\n      curr = \"month\";\n    }\n    this.setState({\n      dateMonment: this.state.dateMonment.subtract(1, curr)\n    });\n  };\n\n  onNext = () => {\n    let curr = \"\";\n    if (this.state.showYears == true) {\n      curr = \"year\";\n    } else {\n      curr = \"month\";\n    }\n    this.setState({\n      dateMonment: this.state.dateMonment.add(1, curr)\n    });\n  };\n\n  capitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  CA_Anne(){\n    const trieAnne = this.state.reservation\n    .filter(anne => moment(anne.update_at).format(\"Y\") ==  this.state.dateMonment.format(\"Y\"))\n    let totalprixanne = 0\n    trieAnne.map(anne => {\n      totalprixanne = totalprixanne + anne.prix\n    })\n    return totalprixanne\n  }\n\n  CA_Moi(){\n    const trieMois = this.state.reservation\n    .filter(unmois => moment(unmois.update_at).format(\"MMMM Y\") === this.state.dateMonment.format(\"MMMM Y\"))\n    let totalprixmoi = 0\n    trieMois.map(moi => {\n      totalprixmoi = totalprixmoi + moi.prix\n    })\n    return totalprixmoi\n  }\n\n  datas(){\n    let reservation = this.state.reservation\n    let datemoment = this.state.dateMonment\n    const filtreMois = reservation.filter(unmois => moment(unmois.update_at).format(\"MMMM Y\") === datemoment.format(\"MMMM Y\"))\n    const objetData = {}\n    for(let i=1; i <= this.daysInMonths() ; i++){\n      let prix$i = 0\n      filtreMois.map(res => {\n        let jour = parseInt(moment(res.updated_at).format(\"D\"))\n        if (jour === i){\n          prix$i = prix$i + res.prix\n        }\n      })\n\n      objetData[i] = prix$i\n    }\n    return objetData\n  }\n\n  render() {\n    const data = {\n      labels: Object.keys(this.datas()),\n      datasets: [\n        {\n          label: 'CA',\n          fill: true,\n          lineTension: 0.3,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 3,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: Object.values(this.datas())\n          //data: [65, 59, 80, 81, 56, 55, 40]\n        }\n      ]\n    };\n    return (\n      <div className=\"m-2\">\n        <center>\n          <h1 className=\"text-white\">CHIFFRE D'AFFAIRE (CA)</h1>\n          <br/>\n          <span className=\" text-white m-1\" onClick={e => {this.onPrev()}}> \n            <a href=\"#\">&laquo;</a>\n          </span>\n          <span className=\"text-white m-2\" onClick={e => {this.showMonth()}}>\n            <a href=\"#\">{this.capitalize(String(this.month()))}</a>\n          </span>\n          <span className=\"text-white\" onClick={(e)=>this.showYear()} >\n            <a href=\"#\"> {this.years()}</a>\n          </span>\n          <span className=\" text-white m-3\" onClick={e => {this.onNext()}}>\n            <a href=\"#\">&raquo;</a>\n          </span>\n           {this.state.showYears && (\n            <this.yearClick/> \n          )}\n          {this.state.showMonth &&  \n          < this.MonthList data = {moment.months()} />}\n        </center>\n        <br/>\n        <div className=\"m-3 d-flex justify-content-between\">\n          <h2>Totale Moi  {this.month()}: {this.CA_Moi()}</h2>\n          <h2>Totale Anne {this.years()} : {this.CA_Anne()}</h2>\n        </div>\n        <div style={{background: \"white\"}}>\n          <Line data={data} />\n        </div>\n      </div>\n    );\n  }\n};","/home/zo/Projet/gplocation/admin/src/components/InlineEdit/InlineEdit.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/Jours/ListeJour.js",["306"],"import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class ListeJours extends Component {\n    componentDidMount() {\n        const { action } = this.props;\n        action.getJour();\n    }\n\n    render() {\n        const { jours, action } = this.props;\n        return (\n            <div className=\"py-4\">\n                <h2>Liste des jours par euros </h2>\n                <div className=\"mt-2\">\n                    <table className=\"table-auto\">\n                        <thead>\n                            <tr>\n                            <th className=\"border px-4 py-2\">Nom</th>\n                            <th className=\"border px-4 py-2\">Jours</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { jours && jours.map(jour => {\n                                return (\n                                    <tr>\n                                        <td className=\"border px-4 py-2\">{ jour.name }</td>\n                                        <td className=\"border px-4 py-2\">{ jour.nombrejour }</td>\n                                        <td className=\"border px-4 py-2\"><span className=\"text-red-500 cursor-pointer\" onClick={() => action.deleteJour(jour)}>Supprimer</span></td>\n                                    </tr>\n                                )\n                            }) }\n                            \n                        </tbody>\n                    </table>\n                </div>\n                \n                { jours && jours.length === 0 ? (<>Aucun jour disponible pour le moment.</>) : null }\n                \n                \n            </div>\n        )\n    }\n}\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/Jours/AddJour.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/Voitures/AddVoiture.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/Voitures/ListeVoiture.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/Editer/DureeLocation/DureeLocation.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/Editer/TarifDeBase/TarifDeBase.js",[],"/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/Tarif/UnPrix.js",["307"],"import React, { Component } from 'react';\nimport { Field } from 'formik';\nimport axios from '../../../axios';\n\nexport default class UnPrix extends Component {\n    state = {\n        jours: [],\n    };\n\n    componentDidMount() {\n        this.getJours();\n    }\n    getJours = () => {\n\t\taxios.get(`/jours`).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tjours: response.data\n\t\t\t\t});\n\t\t\t\tconsole.log();\n\t\t\t}\n\t\t});\n    };\n\n    namePrix=`prix${this.props.num}`\n    nombreJourD=`nombreJourD${this.props.num}`\n    nombreJourF=`nombreJourF${this.props.num}`\n\n    \n    render(){\n        const jours = this.state.jours\n        return(\n            <div className=\"d-flex align-items-start\">\n                \n                {/* <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded \n                    py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" name={this.namePrix} type=\"number\"/>\n                <Field className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded \n                    py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" name={this.namePrix} type=\"number\"/>    \n                 */}\n                 <br/><br/>\n                 <div>\n                    <h3>Jour</h3>\n                    <Field className=\"appearance-none block w-50 bg-gray-200 text-gray-700 border border-gray-200 rounded \n                    py-2 px-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500 m-2\" name={this.nombreJourD} type=\"number\"/>    \n                </div>\n                <div>\n                    <h3>au</h3>\n                    <Field className=\"appearance-none block w-50 bg-gray-200 text-gray-700 border border-gray-200 rounded \n                    py-2 px-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500 m-2\" name={this.nombreJourF} type=\"number\"/>   \n                    \n                </div>\n                <div>\n                    <h3>Prix Euro/Jours</h3>\n                    <Field className=\"appearance-none block w-75 bg-gray-200 text-gray-700 border border-gray-200 rounded \n                    py-2 px-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500 m-2\" name={this.namePrix} type=\"number\"/>  \n                </div>\n                \n            </div>\n        )\n    }\n\n}\n","/home/zo/Projet/gplocation/admin/src/pages/ConfigurationAgence/GestionOF/Components/GestionJF/DeuxJourFerier.js",[],["308","309"],"/home/zo/Projet/gplocation/admin/src/history.js",[],"/home/zo/Projet/gplocation/admin/src/pages/Category/Editer/TarifDeBase/UnTarifDeBase.js",[],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":141,"column":59,"nodeType":"316","messageId":"317","endLine":141,"endColumn":61},{"ruleId":"314","severity":1,"message":"315","line":147,"column":47,"nodeType":"316","messageId":"317","endLine":147,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":35,"column":51,"nodeType":"316","messageId":"317","endLine":35,"endColumn":53},{"ruleId":"318","severity":1,"message":"322","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":17},{"ruleId":"318","severity":1,"message":"323","line":3,"column":9,"nodeType":"320","messageId":"321","endLine":3,"endColumn":15},{"ruleId":"318","severity":1,"message":"324","line":3,"column":17,"nodeType":"320","messageId":"321","endLine":3,"endColumn":22},{"ruleId":"318","severity":1,"message":"325","line":3,"column":24,"nodeType":"320","messageId":"321","endLine":3,"endColumn":28},{"ruleId":"318","severity":1,"message":"326","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":13},{"ruleId":"327","severity":1,"message":"328","line":57,"column":23,"nodeType":"329","endLine":57,"endColumn":26},{"ruleId":"318","severity":1,"message":"330","line":38,"column":15,"nodeType":"320","messageId":"321","endLine":38,"endColumn":22},{"ruleId":"318","severity":1,"message":"331","line":2,"column":18,"nodeType":"320","messageId":"321","endLine":2,"endColumn":31},{"ruleId":"318","severity":1,"message":"332","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":12},{"ruleId":"318","severity":1,"message":"333","line":1,"column":28,"nodeType":"320","messageId":"321","endLine":1,"endColumn":35},{"ruleId":"334","severity":1,"message":"335","line":86,"column":59,"nodeType":"336","messageId":"337","endLine":86,"endColumn":61},{"ruleId":"334","severity":1,"message":"335","line":59,"column":95,"nodeType":"336","messageId":"337","endLine":59,"endColumn":97},{"ruleId":"314","severity":1,"message":"315","line":62,"column":54,"nodeType":"316","messageId":"317","endLine":62,"endColumn":56},{"ruleId":"314","severity":1,"message":"315","line":93,"column":64,"nodeType":"316","messageId":"317","endLine":93,"endColumn":66},{"ruleId":"314","severity":1,"message":"315","line":94,"column":56,"nodeType":"316","messageId":"317","endLine":94,"endColumn":58},{"ruleId":"334","severity":1,"message":"335","line":21,"column":38,"nodeType":"336","messageId":"337","endLine":21,"endColumn":40},{"ruleId":"318","severity":1,"message":"338","line":1,"column":28,"nodeType":"320","messageId":"321","endLine":1,"endColumn":35},{"ruleId":"318","severity":1,"message":"339","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},{"ruleId":"340","severity":1,"message":"341","line":72,"column":45,"nodeType":"329","endLine":72,"endColumn":103},{"ruleId":"314","severity":1,"message":"315","line":35,"column":42,"nodeType":"316","messageId":"317","endLine":35,"endColumn":44},{"ruleId":"314","severity":1,"message":"315","line":46,"column":35,"nodeType":"316","messageId":"317","endLine":46,"endColumn":37},{"ruleId":"314","severity":1,"message":"315","line":48,"column":47,"nodeType":"316","messageId":"317","endLine":48,"endColumn":49},{"ruleId":"318","severity":1,"message":"333","line":1,"column":28,"nodeType":"320","messageId":"321","endLine":1,"endColumn":35},{"ruleId":"342","severity":1,"message":"343","line":25,"column":1,"nodeType":"344","endLine":66,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":49,"column":35,"nodeType":"316","messageId":"317","endLine":49,"endColumn":37},{"ruleId":"318","severity":1,"message":"345","line":72,"column":25,"nodeType":"320","messageId":"321","endLine":72,"endColumn":31},{"ruleId":"314","severity":1,"message":"315","line":48,"column":25,"nodeType":"316","messageId":"317","endLine":48,"endColumn":27},{"ruleId":"314","severity":1,"message":"315","line":178,"column":34,"nodeType":"316","messageId":"317","endLine":178,"endColumn":36},{"ruleId":"314","severity":1,"message":"315","line":179,"column":34,"nodeType":"316","messageId":"317","endLine":179,"endColumn":36},{"ruleId":"314","severity":1,"message":"315","line":180,"column":34,"nodeType":"316","messageId":"317","endLine":180,"endColumn":36},{"ruleId":"346","severity":1,"message":"347","line":15,"column":3,"nodeType":"348","messageId":"349","endLine":17,"endColumn":4},{"ruleId":"314","severity":1,"message":"315","line":76,"column":25,"nodeType":"316","messageId":"317","endLine":76,"endColumn":27},{"ruleId":"327","severity":1,"message":"350","line":83,"column":11,"nodeType":"329","endLine":83,"endColumn":23},{"ruleId":"334","severity":1,"message":"335","line":90,"column":28,"nodeType":"336","messageId":"337","endLine":90,"endColumn":30},{"ruleId":"351","severity":1,"message":"352","line":112,"column":9,"nodeType":"320","messageId":"353","endLine":112,"endColumn":17},{"ruleId":"334","severity":1,"message":"335","line":126,"column":30,"nodeType":"336","messageId":"337","endLine":126,"endColumn":32},{"ruleId":"334","severity":1,"message":"335","line":138,"column":30,"nodeType":"336","messageId":"337","endLine":138,"endColumn":32},{"ruleId":"334","severity":1,"message":"335","line":154,"column":56,"nodeType":"336","messageId":"337","endLine":154,"endColumn":58},{"ruleId":"314","severity":1,"message":"315","line":156,"column":23,"nodeType":"316","messageId":"317","endLine":156,"endColumn":25},{"ruleId":"314","severity":1,"message":"315","line":166,"column":22,"nodeType":"316","messageId":"317","endLine":166,"endColumn":24},{"ruleId":"314","severity":1,"message":"315","line":179,"column":26,"nodeType":"316","messageId":"317","endLine":179,"endColumn":28},{"ruleId":"327","severity":1,"message":"350","line":225,"column":13,"nodeType":"329","endLine":225,"endColumn":25},{"ruleId":"327","severity":1,"message":"350","line":228,"column":13,"nodeType":"329","endLine":228,"endColumn":25},{"ruleId":"327","severity":1,"message":"350","line":231,"column":13,"nodeType":"329","endLine":231,"endColumn":25},{"ruleId":"327","severity":1,"message":"350","line":234,"column":13,"nodeType":"329","endLine":234,"endColumn":25},{"ruleId":"318","severity":1,"message":"322","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":17},{"ruleId":"318","severity":1,"message":"354","line":30,"column":15,"nodeType":"320","messageId":"321","endLine":30,"endColumn":20},{"ruleId":"310","replacedBy":"355"},{"ruleId":"312","replacedBy":"356"},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'ListeCategory' is defined but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'Formik' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'voiture' is assigned a value but never used.","'weekdaysShort' is defined but never used.","'Days' is defined but never used.","'setStat' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setSate' is defined but never used.","'moment' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'action' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-redeclare","'stopDate' is already defined.","redeclared","'jours' is assigned a value but never used.",["357"],["358"],"no-global-assign","no-unsafe-negation"]